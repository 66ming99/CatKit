#+Title: CatKit: Catalysis Kit
#+Author:Jacob Boes
#+OPTIONS: toc:nil

Welcome to CatKit! A staging ground for computational tools which are generally useful for catalysis.

* Molecule enumeration

[[./images/reaction-network.png]]

Currently, the only utility is an enumeration of molecular structures in graph from. What makes this tool useful? Its goal is to be a comprehensive search of all possible chemical structures and the reaction mechanisms which connect them. This includes searching for:

** Thermodynamics:
[X] Various chemical species (C, H, and O currently tested)

[X] Molecules with single bonds

[X] Molecules with double bonds

[X] Molecules with triple bonds

[X] Molecules with single cyclical groups

[X] Molecules with double cyclical groups

[X] Molecules with triple cyclical groups

[ ] Chiral carbon molecules

[ ] cis-trans isomers

** Kinetics:
[X] Addition and Reduction reactions (R1 + R2 <--> P1)

[X] Bond formation / breaking pathways (R1 <--> P1)

[X] - Reconfiguration reactions (R1 <--> R1*)

[ ] - Substitution reactions (R1 + R2 <--> P1 + P2)

X - Currently implemented features

** Example usage:

Below is an example script which generates some simple figures using [[https://networkx.github.io/documentation/networkx-1.10/index.html][NetworkX]] code for all molecules up to C2 H6.

#+BEGIN_SRC python :results output org drawer
from pathways import ReactionNetwork, plot_molecule
from rdkit import Chem
import time
import os

start = time.time()

db_name = 'networks/multiple-bonds-ex.db'

if os.path.exists(db_name):
    os.unlink(db_name)

with ReactionNetwork(db_name=db_name) as rn:
    molecules = rn.molecule_search(
        element_pool={'C': 1, 'H': 4},
        multiple_bond_search=False)
    rn.save_molecules(molecules)

    molecules = rn.molecule_search(
        element_pool={'S': 1, 'H': 4},
        multiple_bond_search=False)
    rn.save_molecules(molecules)

    molecules = rn.molecule_search(
        element_pool={'N': 1, 'H': 4},
        multiple_bond_search=False)
    rn.save_molecules(molecules)

    molecules = rn.molecule_search(
        element_pool={'O': 1, 'H': 4},
        multiple_bond_search=False)
    rn.save_molecules(molecules)

    molecule_data = rn.load_molecules()

    # for i, molecule in molecule_data.items():
    #     plot_molecule(
    #         molecule,
    #         file_name='./images/tmp-molecule-{}.png'.format(i))

    #     print('[[./images/tmp-molecule-{}.png]]'.format(i))

    pathways = rn.path_search()

    # rn.plot_reaction_network(file_name='./images/reaction-network.png')

print('Process completed in {:.1f}s'.format(time.time() - start))
#+END_SRC

#+RESULTS:
:RESULTS:
Process completed in 1.4s
:END:

* Make smiles
#+BEGIN_SRC python :results output org drawer
from pathways import ReactionNetwork, plot_molecule, get_rdkit_graph
import time
import os
import networkx as nx
from rdkit.Chem import AllChem as Chem
from rdkit.Chem.Draw import MolToFile
from ase import Atom, Atoms
import numpy as np


def rdkit_to_ase(m3):
    block = Chem.MolToMolBlock(m3)

    positions = np.empty((m3.GetNumAtoms(), 3))
    symbols = np.empty(m3.GetNumAtoms(), dtype=str)
    for i, atom in enumerate(block.split('\n')[4:m3.GetNumAtoms()+4]):
        data = atom.split()
        positions[i] = np.array(data[:3], dtype=float)
        symbols[i] = data[3]

    return Atoms(symbols, positions)

db_name = 'networks/multiple-bonds-ex.db'

atoms = []
with ReactionNetwork(db_name=db_name) as rn:

    molecule_data = rn.load_molecules()

    for i, molecule in molecule_data.items():
        G = get_rdkit_graph(molecule)
        G = Chem.AddHs(G)
        cids = Chem.EmbedMultipleConfs(G, 50, Chem.ETKDG())
        atoms += [rdkit_to_ase(G)]

# # atoms = []
# # for m in m3.GetConformers():
# #     print(m)
# #     # atoms += rdkit_to_ase(m)

# MolToFile(mol, './images/tmp.png')
# #print('[[./images/tmp.png]]')


from ase.visualize import view
view(atoms)
#+END_SRC

#+RESULTS:
:RESULTS:
:END:
